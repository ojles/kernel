// ...
// Since imx415 doesn't work, let's try gc2053 on both ports
// for testing, only enable gc2053 on CSI0
// ->
// also enable it on CSI1
// ------ works, at least getting frames -----------
// now enable imx415 on CSI0 and gc2053 on CSI1
// imx415 on CSI0 works (colorfull image)
// gc2053 on CSI1 works (colorfull image)
// hmmmm test switch up a couple of things
// 1) use a #define to quickly switch lines
// ----> works, colorfull image from imx415 (only imx415 connected to CSI0), colorfull image from gc2053 (only gc2053 connnected to CSI1)
// now switch imx415 and gc2053
// - since not working
// now enable gc2053 on CSI0 AND CSI1
// hmmm didn't work
// change the i2c regs names back to what worked
// ----------- works ----------------
// -> CSI0 colorfull, CSI1 colorfull (when shining flashlight)
// test swap i2c address regs

#define CONSTI10_LANES_CSIO data-lanes = <1 2>;
#define CONSTI10_LANES_CSI1 data-lanes = <1 2>;

&csi_dphy0 {
	status = "okay";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;
		port@0 {
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;

			mipi_in_ucam0: endpoint@1 {
				reg = <1>;
				remote-endpoint = <&ucam_out0>;
				CONSTI10_LANES_CSIO
			};
		};
		port@1 {
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;

			csidphy0_out: endpoint@0 {
				reg = <0>;
				remote-endpoint = <&mipi_csi2_input>;
				CONSTI10_LANES_CSIO
			};
		};
	};
};


&csi_dphy1 {
	status = "okay";
	ports {
		port@0 {
			csi_dphy1_input: endpoint@1 {
				remote-endpoint = <&ucam_out1>;
				CONSTI10_LANES_CSI1
			};
		};
		port@1 {
			csi_dphy1_output: endpoint@0 {
				remote-endpoint = <&isp_virt1>;
				CONSTI10_LANES_CSI1
			};
		};
	};
};


&i2c1 {
	status = "okay";
	clock-frequency = <400000>;

    gc2053: gc2053@3f {
        compatible = "galaxycore,gc2053";
        reg = <0x3f>;
        clocks = <&cru CLK_MIPICSI_OUT>;
        clock-names = "xvclk";
        power-domains = <&power RV1126_PD_VI>;
        pinctrl-names = "rockchip,camera_default";
        pinctrl-0 = <&mipicsi_clk0>;
        rockchip,camera-module-index = <0>;
        rockchip,camera-module-facing = "front";
        rockchip,camera-module-name = "YT-RV1109-2-V1";
       	rockchip,camera-module-lens-name = "40IR-2MP-F20";
        port {
            ucam_out0: endpoint {
                remote-endpoint = <&mipi_in_ucam0>;
                data-lanes = <1 2>;
            };
        };
    };

	gc2053_2: gc2053_2@37 {
		compatible = "galaxycore,gc2053";
		reg = <0x37>;
		clocks = <&cru CLK_MIPICSI_OUT>;
		clock-names = "xvclk";
		power-domains = <&power RV1126_PD_VI>;
		pinctrl-names = "rockchip,camera_default";
		pinctrl-0 = <&mipicsi_clk1>;
		rockchip,camera-module-index = <1>;
		rockchip,camera-module-facing = "front";
		rockchip,camera-module-name = "CMK-OT1726-PG1";
        rockchip,camera-module-lens-name = "29IR-2MP-F25";
		port {
			ucam_out1: endpoint {
				remote-endpoint = <&csi_dphy1_input>;
				data-lanes = <1 2>;
			};
		};
	};
	/*imx415: imx415@1a {
       compatible = "sony,imx415";
       reg = <0x1a>;
       clocks = <&cru CLK_MIPICSI_OUT>;
       clock-names = "xvclk";
       power-domains = <&power RV1126_PD_VI>;
       pinctrl-names = "rockchip,camera_default";
       pinctrl-0 = <&mipicsi_clk1>;
       rockchip,camera-module-index = <1>;
       rockchip,camera-module-facing = "front";
       rockchip,camera-module-name = "YT10092";
       rockchip,camera-module-lens-name = "IR0147-28IRC-8M-F20";
       ir-cut = <&cam_ircut0>;
       port {
               ucam_out1: endpoint {
                               remote-endpoint = <&csi_dphy1_input>;
                               data-lanes = <1 2 3 4>;
               };
       };
    };*/
};



/* isp cma buffer don't fiddle with it, dual camera(1920 * 1080) need 92M buffer */
&isp_reserved {
	//size = <0x5c00000>;
	//size = <0xb800000>;
	size = <0x20000000>; // 536870912 / 1024 / 1024 = 512 (MB)
};

&mipi_csi2 {
	status = "okay";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;

			mipi_csi2_input: endpoint@1 {
				reg = <1>;
				remote-endpoint = <&csidphy0_out>;
				CONSTI10_LANES_CSIO
			};
		};

		port@1 {
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;

			mipi_csi2_output: endpoint@0 {
				reg = <0>;
				remote-endpoint = <&cif_mipi_in>;
				CONSTI10_LANES_CSIO
			};
		};
	};
};

&rkcif {
	status = "okay";
};

&rkcif_mmu {
	status = "disabled";
};

&rkcif_dvp {
	status = "okay";

	port {
		/* Parallel bus endpoint */
		/*
		cif_para_in: endpoint {
			remote-endpoint = <&cam_para_out1>;
			bus-width = <12>;
			hsync-active = <1>;
			vsync-active = <0>;
		};
		*/
	};
};
&rkcif_mipi_lvds {
	status = "okay";
	port {
		// MIPI CSI-2 endpoint
		cif_mipi_in: endpoint {
			remote-endpoint = <&mipi_csi2_output>;
			CONSTI10_LANES_CSIO
		};
	};
};

&rkcif_mipi_lvds_sditf {
	status = "okay";

	port {
		// MIPI CSI-2 endpoint
		mipi_lvds_sditf: endpoint {
			remote-endpoint = <&isp_in>;
			CONSTI10_LANES_CSIO
		};
	};
};

&rkisp_vir0 {
	status = "okay";

	ports {
		port@0 {
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;

			isp_in: endpoint@0 {
				reg = <0>;
				remote-endpoint = <&mipi_lvds_sditf>;
			};
		};
	};
};

&rkisp_vir1 {
	status = "okay";
	ports {
		port@0 {
			isp_virt1: endpoint@0 {
				remote-endpoint = <&csi_dphy1_output>;
			};
		};
	};
};

&rkispp_vir1 {
	status = "okay";
};

&rkispp {
	status = "okay";
	//the max input w h and fps of mulit sensor
	//max-input = <1920 1080 30>;
	max-input = <3840 2160 30>;
};

